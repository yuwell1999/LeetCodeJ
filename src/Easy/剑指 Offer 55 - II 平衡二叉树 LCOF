package Easy;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode(int x) { val = x; }
 * }
 */
class Solution_jz55 {
    // 后序遍历 Bottom-up
//    public boolean isBalanced(TreeNode root) {
//        return recur(root) != -1;
//    }
//
//    public int recur(TreeNode root) {
//        if (root == null) {
//            return 0;
//        }
//        int left = recur(root.left);
//        if (left == -1) {
//            return -1;
//        }
//        int right = recur(root.right);
//        if (right == -1) {
//            return -1;
//        }
//        return Math.abs(left - right) < 2 ? Math.max(left, right) + 1 : -1;
//    }

    // 先序遍历 判断深度 Top-down
    public boolean isBalanced(TreeNode root) {
        if (root == null) {
            return true;
        }

        return Math.abs(depth(root.left) - depth(root.right)) <= 1 && isBalanced(root.left) && isBalanced(root.right);
    }

    public int depth(TreeNode root) {
        if (root == null) {
            return 0;
        }
        return Math.max(depth(root.left), depth(root.right)) + 1;
    }
}