package Easy;

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 * int val;
 * TreeNode left;
 * TreeNode right;
 * TreeNode() {}
 * TreeNode(int val) { this.val = val; }
 * TreeNode(int val, TreeNode left, TreeNode right) {
 * this.val = val;
 * this.left = left;
 * this.right = right;
 * }
 * }
 */
class Solution_572 {
    public boolean isSubtree(TreeNode s, TreeNode t) {
        return dfs(s, t);
    }

    public boolean dfs(TreeNode s, TreeNode t) {
        if (s == null) {
            return false;
        }

        // s和t相同，s左子树和t相同，s右子树和t相同
        return check(s, t) || dfs(s.left, t) || dfs(s.right, t);

    }

    public boolean check(TreeNode s, TreeNode t) {
        if (s == null && t == null) {
            return true;
        }
        // 子树结构不相等或者值不相等
        if (s == null || t == null || s.val != t.val) {
            return false;
        }

        return check(s.left, t.left) && check(s.right, t.right);
    }
}