package Medium;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

class Solution_15 {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new ArrayList<>();

        for (int i = 0; i < nums.length; i++) {


            int start = i + 1;
            int end = nums.length - 1;

            // 特判，如果某个开始的值大于0，就不可能三数之和达到0了
            if (nums[i] > 0) {
                return ans;
            }
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }


            while (start < end) {

                if (nums[start] + nums[end] < -1 * nums[i]) {
                    start++;
                } else if (nums[start] + nums[end] > -1 * nums[i]) {
                    end--;
                } else if (nums[start] + nums[end] == -1 * nums[i]) {
                    List<Integer> tmp = new ArrayList<>();
                    tmp.add(nums[i]);
                    tmp.add(nums[start]);
                    tmp.add(nums[end]);
//                    if(ans.contains(tmp)){
//                        tmp.clear();
//                    }
//                    if (!ans.contains(tmp)&&tmp.size()==3) {
//                        ans.add(tmp);
//                        break;
//                    }
                    ans.add(tmp);

                    // 去重
                    while (start < end && nums[start + 1] == nums[start]) {
                        start++;
                    }
                    while (start < end && nums[end - 1] == nums[end]) {
                        end--;
                    }

                    start++;
                    end--;
                }
            }
        }
        return ans;
    }
}