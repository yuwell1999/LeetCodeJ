package Easy;

/**
 * Definition for singly-linked list.
 * public class ListNode {
 * int val;
 * ListNode next;
 * ListNode(int x) {
 * val = x;
 * next = null;
 * }
 * }
 */
class Solution_160 {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null) {
            return null;
        }
        ListNode start1 = headA;
        ListNode start2 = headB;

        while (start1 != start2) {
//            if (start1 == null) {
//                start1 = headB;
//            }else{
//                start1 = start1.next;
//            }
//            if (start2 == null) {
//                start2 = headA;
//            }else{
//                start2 = start2.next;
//            }
            start1 = (start1 == null) ? headB : start1.next;
            start2 = (start2 == null) ? headA : start2.next;

        }
        return start1;
    }
}